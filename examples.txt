/** <examples>
 ?- astar([q], Path, Cost, [[q,a],[q,b,c],[a,d,e],[a,c,e,g],[b,c],[c,e,f],[e],[f,e]]).
 */

goal([]).

arc([H|T], Node, Cost, KB)     :-     member([H|B], KB), 
                                append(B, T, Node),
                                length(B, L), 
                                Cost is 1 + L / (L + 1).

heuristic(Node, H)     :-     length(Node, H).
                                       
less-than([[Node1|_], Cost], [[Node2|_], Cost])    :-    heuristic(Node1, Hvalue1),
                                                    heuristic(Node2, Hvalue2),
                                                    F1 is Cost1 + Hvalue1,
                                                    F2 is Cost2 + Hvalue2,
                                                    F1 =< F2.

search([Node|_])     :-     goal(Node).
search([Node|More]) :-     findall(X, arc(Node, X), Children),
                           add2frontier(Children, More, New),
                        search(New).

astar(+Node, ?Path, ?Cost, +KB)
